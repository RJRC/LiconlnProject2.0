//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LincolnDBEntities : DbContext
    {
        public LincolnDBEntities()
            : base("name=LincolnDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Affair> Affair { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Login> Login { get; set; }
        public virtual DbSet<Movement> Movement { get; set; }
        public virtual DbSet<Notary> Notary { get; set; }
        public virtual DbSet<Protocol> Protocol { get; set; }
        public virtual DbSet<Writing> Writing { get; set; }
    
        public virtual ObjectResult<Nullable<int>> proc_BalanceActualMonth(Nullable<int> id, string month)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_BalanceActualMonth", idParameter, monthParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Create_Affair(string affairName)
        {
            var affairNameParameter = affairName != null ?
                new ObjectParameter("affairName", affairName) :
                new ObjectParameter("affairName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Create_Affair", affairNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Create_Client(string clientName)
        {
            var clientNameParameter = clientName != null ?
                new ObjectParameter("clientName", clientName) :
                new ObjectParameter("clientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Create_Client", clientNameParameter);
        }
    
        public virtual int proc_Create_Movement(Nullable<int> protocolID, Nullable<int> writingID, Nullable<decimal> billedAmount)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            var billedAmountParameter = billedAmount.HasValue ?
                new ObjectParameter("billedAmount", billedAmount) :
                new ObjectParameter("billedAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Create_Movement", protocolIDParameter, writingIDParameter, billedAmountParameter);
        }
    
        public virtual int proc_Create_Notary(string name, string initials, string enabled, string availability, Nullable<int> balanceLimitMonth, Nullable<int> year)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var initialsParameter = initials != null ?
                new ObjectParameter("initials", initials) :
                new ObjectParameter("initials", typeof(string));
    
            var enabledParameter = enabled != null ?
                new ObjectParameter("enabled", enabled) :
                new ObjectParameter("enabled", typeof(string));
    
            var availabilityParameter = availability != null ?
                new ObjectParameter("availability", availability) :
                new ObjectParameter("availability", typeof(string));
    
            var balanceLimitMonthParameter = balanceLimitMonth.HasValue ?
                new ObjectParameter("balanceLimitMonth", balanceLimitMonth) :
                new ObjectParameter("balanceLimitMonth", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Create_Notary", nameParameter, initialsParameter, enabledParameter, availabilityParameter, balanceLimitMonthParameter, yearParameter);
        }
    
        public virtual int proc_Create_Protocol(Nullable<int> notaryID, Nullable<decimal> actualBalance, string month, Nullable<int> year)
        {
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            var actualBalanceParameter = actualBalance.HasValue ?
                new ObjectParameter("actualBalance", actualBalance) :
                new ObjectParameter("actualBalance", typeof(decimal));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Create_Protocol", notaryIDParameter, actualBalanceParameter, monthParameter, yearParameter);
        }
    
        public virtual int proc_Create_Writing(Nullable<int> clientID, Nullable<int> protocolID, Nullable<int> affairID, string billingNumber, string billingAddress, string billingEmail, string date, string @event, Nullable<int> billedAmount, string parts, string writingNumber)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("clientID", clientID) :
                new ObjectParameter("clientID", typeof(int));
    
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            var affairIDParameter = affairID.HasValue ?
                new ObjectParameter("affairID", affairID) :
                new ObjectParameter("affairID", typeof(int));
    
            var billingNumberParameter = billingNumber != null ?
                new ObjectParameter("billingNumber", billingNumber) :
                new ObjectParameter("billingNumber", typeof(string));
    
            var billingAddressParameter = billingAddress != null ?
                new ObjectParameter("billingAddress", billingAddress) :
                new ObjectParameter("billingAddress", typeof(string));
    
            var billingEmailParameter = billingEmail != null ?
                new ObjectParameter("billingEmail", billingEmail) :
                new ObjectParameter("billingEmail", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var eventParameter = @event != null ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(string));
    
            var billedAmountParameter = billedAmount.HasValue ?
                new ObjectParameter("billedAmount", billedAmount) :
                new ObjectParameter("billedAmount", typeof(int));
    
            var partsParameter = parts != null ?
                new ObjectParameter("parts", parts) :
                new ObjectParameter("parts", typeof(string));
    
            var writingNumberParameter = writingNumber != null ?
                new ObjectParameter("writingNumber", writingNumber) :
                new ObjectParameter("writingNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Create_Writing", clientIDParameter, protocolIDParameter, affairIDParameter, billingNumberParameter, billingAddressParameter, billingEmailParameter, dateParameter, eventParameter, billedAmountParameter, partsParameter, writingNumberParameter);
        }
    
        public virtual int proc_Delete_Notary(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_Notary", idParameter);
        }
    
        public virtual int proc_Delete_UserLoginByID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_UserLoginByID", idParameter);
        }
    
        public virtual int proc_Delete_Writing(Nullable<int> writingID)
        {
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_Writing", writingIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Get_ActualBillingByMonth(string month, Nullable<int> year, Nullable<int> notaryID)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Get_ActualBillingByMonth", monthParameter, yearParameter, notaryIDParameter);
        }
    
        public virtual ObjectResult<proc_Get_Affairs_Result> proc_Get_Affairs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Affairs_Result>("proc_Get_Affairs");
        }
    
        public virtual ObjectResult<proc_Get_ALLCoNotariesWritingsByNotary_Result> proc_Get_ALLCoNotariesWritingsByNotary(Nullable<int> notaryID, Nullable<int> year)
        {
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_ALLCoNotariesWritingsByNotary_Result>("proc_Get_ALLCoNotariesWritingsByNotary", notaryIDParameter, yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Get_AllNotaryIDs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Get_AllNotaryIDs");
        }
    
        public virtual ObjectResult<proc_Get_ALLOwnWritingsByNotary_Result> proc_Get_ALLOwnWritingsByNotary(Nullable<int> year, Nullable<int> notaryID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_ALLOwnWritingsByNotary_Result>("proc_Get_ALLOwnWritingsByNotary", yearParameter, notaryIDParameter);
        }
    
        public virtual ObjectResult<proc_GET_AllUserLogin_Result> proc_GET_AllUserLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GET_AllUserLogin_Result>("proc_GET_AllUserLogin");
        }
    
        public virtual ObjectResult<proc_Get_ALLWritings_Result> proc_Get_ALLWritings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_ALLWritings_Result>("proc_Get_ALLWritings");
        }
    
        public virtual ObjectResult<proc_Get_ALLWritingsByProtocol_Result> proc_Get_ALLWritingsByProtocol(string month, Nullable<int> year, Nullable<int> notaryID)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_ALLWritingsByProtocol_Result>("proc_Get_ALLWritingsByProtocol", monthParameter, yearParameter, notaryIDParameter);
        }
    
        public virtual ObjectResult<proc_Get_Clients_Result> proc_Get_Clients()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Clients_Result>("proc_Get_Clients");
        }
    
        public virtual ObjectResult<proc_Get_Co_NotaryWritingByIDToUpdate_Result> proc_Get_Co_NotaryWritingByIDToUpdate(Nullable<int> writingID)
        {
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Co_NotaryWritingByIDToUpdate_Result>("proc_Get_Co_NotaryWritingByIDToUpdate", writingIDParameter);
        }
    
        public virtual ObjectResult<proc_Get_Co_NotaryWritingByID_Result> proc_Get_Co_NotaryWritingByID(Nullable<int> writingID)
        {
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Co_NotaryWritingByID_Result>("proc_Get_Co_NotaryWritingByID", writingIDParameter);
        }
    
        public virtual ObjectResult<proc_Get_JustOwnWritingsByProtocol_Result> proc_Get_JustOwnWritingsByProtocol(Nullable<int> protocolID)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_JustOwnWritingsByProtocol_Result>("proc_Get_JustOwnWritingsByProtocol", protocolIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Get_LastWriting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Get_LastWriting");
        }
    
        public virtual ObjectResult<proc_Get_Notaries_Result> proc_Get_Notaries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Notaries_Result>("proc_Get_Notaries");
        }
    
        public virtual ObjectResult<proc_Get_Notaries_Eliminated_Result> proc_Get_Notaries_Eliminated()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Notaries_Eliminated_Result>("proc_Get_Notaries_Eliminated");
        }
    
        public virtual ObjectResult<proc_Get_NotariesWithOutOneById_Result> proc_Get_NotariesWithOutOneById(Nullable<int> notaryId)
        {
            var notaryIdParameter = notaryId.HasValue ?
                new ObjectParameter("notaryId", notaryId) :
                new ObjectParameter("notaryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_NotariesWithOutOneById_Result>("proc_Get_NotariesWithOutOneById", notaryIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Get_OneWritingByNotaryIDToUpdate(string month, Nullable<int> year, Nullable<int> notaryID, Nullable<int> writingID)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Get_OneWritingByNotaryIDToUpdate", monthParameter, yearParameter, notaryIDParameter, writingIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Get_ProtocolIDByMonthAndYear(string month, Nullable<int> year, Nullable<int> notaryID)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Get_ProtocolIDByMonthAndYear", monthParameter, yearParameter, notaryIDParameter);
        }
    
        public virtual ObjectResult<proc_Get_ProtocolInfo_Result> proc_Get_ProtocolInfo(Nullable<int> protocolID)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_ProtocolInfo_Result>("proc_Get_ProtocolInfo", protocolIDParameter);
        }
    
        public virtual ObjectResult<proc_Get_Protocols_Result> proc_Get_Protocols()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Protocols_Result>("proc_Get_Protocols");
        }
    
        public virtual ObjectResult<proc_Get_ProtocolsByMonth_Result> proc_Get_ProtocolsByMonth(string month, Nullable<int> year)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_ProtocolsByMonth_Result>("proc_Get_ProtocolsByMonth", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Get_Years()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Get_Years");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_HonoraryWriting(Nullable<int> writingID)
        {
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_HonoraryWriting", writingIDParameter);
        }
    
        public virtual int proc_Insert_UserLogin(string username, string password, string type, string email)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Insert_UserLogin", usernameParameter, passwordParameter, typeParameter, emailParameter);
        }
    
        public virtual int proc_ModifyActualBalance_Protocol(Nullable<int> protocolID, Nullable<decimal> actualBalance)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            var actualBalanceParameter = actualBalance.HasValue ?
                new ObjectParameter("actualBalance", actualBalance) :
                new ObjectParameter("actualBalance", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ModifyActualBalance_Protocol", protocolIDParameter, actualBalanceParameter);
        }
    
        public virtual int proc_Restore_Notary(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Restore_Notary", idParameter);
        }
    
        public virtual ObjectResult<proc_SummaryActualMonth_Result> proc_SummaryActualMonth(string month)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_SummaryActualMonth_Result>("proc_SummaryActualMonth", monthParameter);
        }
    
        public virtual ObjectResult<proc_SummaryMonths_Result> proc_SummaryMonths(string month, Nullable<int> year)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_SummaryMonths_Result>("proc_SummaryMonths", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_SummaryMovementsByNotaryID(Nullable<int> notaryID)
        {
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_SummaryMovementsByNotaryID", notaryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_SummaryMovementsByNotaryIDAndMonth(Nullable<int> notaryID, string month, Nullable<int> year)
        {
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_SummaryMovementsByNotaryIDAndMonth", notaryIDParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<proc_SummaryNotary_Result> proc_SummaryNotary(Nullable<int> notaryID)
        {
            var notaryIDParameter = notaryID.HasValue ?
                new ObjectParameter("notaryID", notaryID) :
                new ObjectParameter("notaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_SummaryNotary_Result>("proc_SummaryNotary", notaryIDParameter);
        }
    
        public virtual ObjectResult<proc_SummaryPerMonth_Result> proc_SummaryPerMonth(string month, Nullable<int> year)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_SummaryPerMonth_Result>("proc_SummaryPerMonth", monthParameter, yearParameter);
        }
    
        public virtual int proc_Update_Affair(Nullable<int> affairID, Nullable<int> affairName)
        {
            var affairIDParameter = affairID.HasValue ?
                new ObjectParameter("affairID", affairID) :
                new ObjectParameter("affairID", typeof(int));
    
            var affairNameParameter = affairName.HasValue ?
                new ObjectParameter("affairName", affairName) :
                new ObjectParameter("affairName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_Affair", affairIDParameter, affairNameParameter);
        }
    
        public virtual int proc_Update_Client(Nullable<int> clientID, Nullable<decimal> clientName)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("clientID", clientID) :
                new ObjectParameter("clientID", typeof(int));
    
            var clientNameParameter = clientName.HasValue ?
                new ObjectParameter("clientName", clientName) :
                new ObjectParameter("clientName", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_Client", clientIDParameter, clientNameParameter);
        }
    
        public virtual int proc_Update_Movement(Nullable<int> protocolID, Nullable<int> writingID, Nullable<decimal> billedAmount, Nullable<int> newProtocolID)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            var billedAmountParameter = billedAmount.HasValue ?
                new ObjectParameter("billedAmount", billedAmount) :
                new ObjectParameter("billedAmount", typeof(decimal));
    
            var newProtocolIDParameter = newProtocolID.HasValue ?
                new ObjectParameter("newProtocolID", newProtocolID) :
                new ObjectParameter("newProtocolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_Movement", protocolIDParameter, writingIDParameter, billedAmountParameter, newProtocolIDParameter);
        }
    
        public virtual int proc_Update_Notary(Nullable<int> id, string name, string initials, string enabled, string availability, Nullable<int> balanceLimitMonth, string eliminated, string month, Nullable<int> year)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var initialsParameter = initials != null ?
                new ObjectParameter("initials", initials) :
                new ObjectParameter("initials", typeof(string));
    
            var enabledParameter = enabled != null ?
                new ObjectParameter("enabled", enabled) :
                new ObjectParameter("enabled", typeof(string));
    
            var availabilityParameter = availability != null ?
                new ObjectParameter("availability", availability) :
                new ObjectParameter("availability", typeof(string));
    
            var balanceLimitMonthParameter = balanceLimitMonth.HasValue ?
                new ObjectParameter("balanceLimitMonth", balanceLimitMonth) :
                new ObjectParameter("balanceLimitMonth", typeof(int));
    
            var eliminatedParameter = eliminated != null ?
                new ObjectParameter("eliminated", eliminated) :
                new ObjectParameter("eliminated", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_Notary", idParameter, nameParameter, initialsParameter, enabledParameter, availabilityParameter, balanceLimitMonthParameter, eliminatedParameter, monthParameter, yearParameter);
        }
    
        public virtual int proc_Update_Protocol(Nullable<int> protocolID, Nullable<decimal> actualBalance, string month, Nullable<int> year)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            var actualBalanceParameter = actualBalance.HasValue ?
                new ObjectParameter("actualBalance", actualBalance) :
                new ObjectParameter("actualBalance", typeof(decimal));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_Protocol", protocolIDParameter, actualBalanceParameter, monthParameter, yearParameter);
        }
    
        public virtual int proc_Update_UserLogin(string username, string password, string type, string email, Nullable<int> id)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_UserLogin", usernameParameter, passwordParameter, typeParameter, emailParameter, idParameter);
        }
    
        public virtual int proc_Update_WritingByID(Nullable<int> writingID, string billingNumber, string billingAddress, string billingEmail, string date, string eventWriting, Nullable<int> billedAmount, Nullable<int> protocolID, Nullable<int> newProtocolID, string writingNumber, string parts, Nullable<int> clientID, Nullable<int> affairID)
        {
            var writingIDParameter = writingID.HasValue ?
                new ObjectParameter("writingID", writingID) :
                new ObjectParameter("writingID", typeof(int));
    
            var billingNumberParameter = billingNumber != null ?
                new ObjectParameter("billingNumber", billingNumber) :
                new ObjectParameter("billingNumber", typeof(string));
    
            var billingAddressParameter = billingAddress != null ?
                new ObjectParameter("billingAddress", billingAddress) :
                new ObjectParameter("billingAddress", typeof(string));
    
            var billingEmailParameter = billingEmail != null ?
                new ObjectParameter("billingEmail", billingEmail) :
                new ObjectParameter("billingEmail", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var eventWritingParameter = eventWriting != null ?
                new ObjectParameter("eventWriting", eventWriting) :
                new ObjectParameter("eventWriting", typeof(string));
    
            var billedAmountParameter = billedAmount.HasValue ?
                new ObjectParameter("billedAmount", billedAmount) :
                new ObjectParameter("billedAmount", typeof(int));
    
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("protocolID", protocolID) :
                new ObjectParameter("protocolID", typeof(int));
    
            var newProtocolIDParameter = newProtocolID.HasValue ?
                new ObjectParameter("newProtocolID", newProtocolID) :
                new ObjectParameter("newProtocolID", typeof(int));
    
            var writingNumberParameter = writingNumber != null ?
                new ObjectParameter("writingNumber", writingNumber) :
                new ObjectParameter("writingNumber", typeof(string));
    
            var partsParameter = parts != null ?
                new ObjectParameter("parts", parts) :
                new ObjectParameter("parts", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("clientID", clientID) :
                new ObjectParameter("clientID", typeof(int));
    
            var affairIDParameter = affairID.HasValue ?
                new ObjectParameter("affairID", affairID) :
                new ObjectParameter("affairID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_WritingByID", writingIDParameter, billingNumberParameter, billingAddressParameter, billingEmailParameter, dateParameter, eventWritingParameter, billedAmountParameter, protocolIDParameter, newProtocolIDParameter, writingNumberParameter, partsParameter, clientIDParameter, affairIDParameter);
        }
    
        public virtual int proc_UpdateProtocolActualBillingByMonth(Nullable<int> id, string month, Nullable<int> year)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateProtocolActualBillingByMonth", idParameter, monthParameter, yearParameter);
        }
    }
}
